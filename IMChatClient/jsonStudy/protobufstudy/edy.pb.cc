// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: edy.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "edy.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* EmbeddedMessage_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EmbeddedMessage_reflection_ = NULL;
const ::google::protobuf::Descriptor* EdyMsg_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  EdyMsg_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_edy_2eproto() {
  protobuf_AddDesc_edy_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "edy.proto");
  GOOGLE_CHECK(file != NULL);
  EmbeddedMessage_descriptor_ = file->message_type(0);
  static const int EmbeddedMessage_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddedMessage, msubcmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddedMessage, strparams_),
  };
  EmbeddedMessage_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EmbeddedMessage_descriptor_,
      EmbeddedMessage::default_instance_,
      EmbeddedMessage_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddedMessage, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EmbeddedMessage, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EmbeddedMessage));
  EdyMsg_descriptor_ = file->message_type(1);
  static const int EdyMsg_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdyMsg, ncmd_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdyMsg, strdata_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdyMsg, submsg_),
  };
  EdyMsg_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      EdyMsg_descriptor_,
      EdyMsg::default_instance_,
      EdyMsg_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdyMsg, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EdyMsg, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(EdyMsg));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_edy_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EmbeddedMessage_descriptor_, &EmbeddedMessage::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    EdyMsg_descriptor_, &EdyMsg::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_edy_2eproto() {
  delete EmbeddedMessage::default_instance_;
  delete EmbeddedMessage_reflection_;
  delete EdyMsg::default_instance_;
  delete EdyMsg_reflection_;
}

void protobuf_AddDesc_edy_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tedy.proto\"5\n\017EmbeddedMessage\022\017\n\007mSubCm"
    "d\030\001 \002(\r\022\021\n\tstrParams\030\002 \002(\t\"L\n\006EdyMsg\022\017\n\004"
    "nCmd\030\001 \002(\r:\0010\022\017\n\007strData\030\002 \002(\t\022 \n\006subMsg"
    "\030\003 \001(\0132\020.EmbeddedMessage", 144);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "edy.proto", &protobuf_RegisterTypes);
  EmbeddedMessage::default_instance_ = new EmbeddedMessage();
  EdyMsg::default_instance_ = new EdyMsg();
  EmbeddedMessage::default_instance_->InitAsDefaultInstance();
  EdyMsg::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_edy_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_edy_2eproto {
  StaticDescriptorInitializer_edy_2eproto() {
    protobuf_AddDesc_edy_2eproto();
  }
} static_descriptor_initializer_edy_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int EmbeddedMessage::kMSubCmdFieldNumber;
const int EmbeddedMessage::kStrParamsFieldNumber;
#endif  // !_MSC_VER

EmbeddedMessage::EmbeddedMessage()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EmbeddedMessage)
}

void EmbeddedMessage::InitAsDefaultInstance() {
}

EmbeddedMessage::EmbeddedMessage(const EmbeddedMessage& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EmbeddedMessage)
}

void EmbeddedMessage::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  msubcmd_ = 0u;
  strparams_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EmbeddedMessage::~EmbeddedMessage() {
  // @@protoc_insertion_point(destructor:EmbeddedMessage)
  SharedDtor();
}

void EmbeddedMessage::SharedDtor() {
  if (strparams_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strparams_;
  }
  if (this != default_instance_) {
  }
}

void EmbeddedMessage::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EmbeddedMessage::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EmbeddedMessage_descriptor_;
}

const EmbeddedMessage& EmbeddedMessage::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_edy_2eproto();
  return *default_instance_;
}

EmbeddedMessage* EmbeddedMessage::default_instance_ = NULL;

EmbeddedMessage* EmbeddedMessage::New() const {
  return new EmbeddedMessage;
}

void EmbeddedMessage::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    msubcmd_ = 0u;
    if (has_strparams()) {
      if (strparams_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        strparams_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EmbeddedMessage::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EmbeddedMessage)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 mSubCmd = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &msubcmd_)));
          set_has_msubcmd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strParams;
        break;
      }

      // required string strParams = 2;
      case 2: {
        if (tag == 18) {
         parse_strParams:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strparams()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strparams().data(), this->strparams().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "strparams");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EmbeddedMessage)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EmbeddedMessage)
  return false;
#undef DO_
}

void EmbeddedMessage::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EmbeddedMessage)
  // required uint32 mSubCmd = 1;
  if (has_msubcmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->msubcmd(), output);
  }

  // required string strParams = 2;
  if (has_strparams()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strparams().data(), this->strparams().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strparams");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strparams(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EmbeddedMessage)
}

::google::protobuf::uint8* EmbeddedMessage::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EmbeddedMessage)
  // required uint32 mSubCmd = 1;
  if (has_msubcmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->msubcmd(), target);
  }

  // required string strParams = 2;
  if (has_strparams()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strparams().data(), this->strparams().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strparams");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strparams(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EmbeddedMessage)
  return target;
}

int EmbeddedMessage::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 mSubCmd = 1;
    if (has_msubcmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->msubcmd());
    }

    // required string strParams = 2;
    if (has_strparams()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strparams());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EmbeddedMessage::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EmbeddedMessage* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EmbeddedMessage*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EmbeddedMessage::MergeFrom(const EmbeddedMessage& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_msubcmd()) {
      set_msubcmd(from.msubcmd());
    }
    if (from.has_strparams()) {
      set_strparams(from.strparams());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EmbeddedMessage::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EmbeddedMessage::CopyFrom(const EmbeddedMessage& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EmbeddedMessage::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void EmbeddedMessage::Swap(EmbeddedMessage* other) {
  if (other != this) {
    std::swap(msubcmd_, other->msubcmd_);
    std::swap(strparams_, other->strparams_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EmbeddedMessage::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EmbeddedMessage_descriptor_;
  metadata.reflection = EmbeddedMessage_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int EdyMsg::kNCmdFieldNumber;
const int EdyMsg::kStrDataFieldNumber;
const int EdyMsg::kSubMsgFieldNumber;
#endif  // !_MSC_VER

EdyMsg::EdyMsg()
  : ::google::protobuf::Message() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:EdyMsg)
}

void EdyMsg::InitAsDefaultInstance() {
  submsg_ = const_cast< ::EmbeddedMessage*>(&::EmbeddedMessage::default_instance());
}

EdyMsg::EdyMsg(const EdyMsg& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:EdyMsg)
}

void EdyMsg::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ncmd_ = 0u;
  strdata_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  submsg_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

EdyMsg::~EdyMsg() {
  // @@protoc_insertion_point(destructor:EdyMsg)
  SharedDtor();
}

void EdyMsg::SharedDtor() {
  if (strdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete strdata_;
  }
  if (this != default_instance_) {
    delete submsg_;
  }
}

void EdyMsg::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EdyMsg::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EdyMsg_descriptor_;
}

const EdyMsg& EdyMsg::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_edy_2eproto();
  return *default_instance_;
}

EdyMsg* EdyMsg::default_instance_ = NULL;

EdyMsg* EdyMsg::New() const {
  return new EdyMsg;
}

void EdyMsg::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    ncmd_ = 0u;
    if (has_strdata()) {
      if (strdata_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        strdata_->clear();
      }
    }
    if (has_submsg()) {
      if (submsg_ != NULL) submsg_->::EmbeddedMessage::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool EdyMsg::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:EdyMsg)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 nCmd = 1 [default = 0];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &ncmd_)));
          set_has_ncmd();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_strData;
        break;
      }

      // required string strData = 2;
      case 2: {
        if (tag == 18) {
         parse_strData:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_strdata()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->strdata().data(), this->strdata().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "strdata");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_subMsg;
        break;
      }

      // optional .EmbeddedMessage subMsg = 3;
      case 3: {
        if (tag == 26) {
         parse_subMsg:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_submsg()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:EdyMsg)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:EdyMsg)
  return false;
#undef DO_
}

void EdyMsg::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:EdyMsg)
  // required uint32 nCmd = 1 [default = 0];
  if (has_ncmd()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->ncmd(), output);
  }

  // required string strData = 2;
  if (has_strdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strdata().data(), this->strdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strdata");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->strdata(), output);
  }

  // optional .EmbeddedMessage subMsg = 3;
  if (has_submsg()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->submsg(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:EdyMsg)
}

::google::protobuf::uint8* EdyMsg::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:EdyMsg)
  // required uint32 nCmd = 1 [default = 0];
  if (has_ncmd()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->ncmd(), target);
  }

  // required string strData = 2;
  if (has_strdata()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->strdata().data(), this->strdata().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "strdata");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->strdata(), target);
  }

  // optional .EmbeddedMessage subMsg = 3;
  if (has_submsg()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->submsg(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:EdyMsg)
  return target;
}

int EdyMsg::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 nCmd = 1 [default = 0];
    if (has_ncmd()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->ncmd());
    }

    // required string strData = 2;
    if (has_strdata()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->strdata());
    }

    // optional .EmbeddedMessage subMsg = 3;
    if (has_submsg()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->submsg());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void EdyMsg::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const EdyMsg* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const EdyMsg*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void EdyMsg::MergeFrom(const EdyMsg& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_ncmd()) {
      set_ncmd(from.ncmd());
    }
    if (from.has_strdata()) {
      set_strdata(from.strdata());
    }
    if (from.has_submsg()) {
      mutable_submsg()->::EmbeddedMessage::MergeFrom(from.submsg());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void EdyMsg::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void EdyMsg::CopyFrom(const EdyMsg& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool EdyMsg::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_submsg()) {
    if (!this->submsg().IsInitialized()) return false;
  }
  return true;
}

void EdyMsg::Swap(EdyMsg* other) {
  if (other != this) {
    std::swap(ncmd_, other->ncmd_);
    std::swap(strdata_, other->strdata_);
    std::swap(submsg_, other->submsg_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata EdyMsg::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = EdyMsg_descriptor_;
  metadata.reflection = EdyMsg_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
